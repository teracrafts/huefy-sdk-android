// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.teracrafts.huefy

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class BulkEmailResultJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<BulkEmailResult>() {
  private val options: JsonReader.Options = JsonReader.Options.of("email", "success", "message_id",
      "error")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "email")

  private val booleanAdapter: JsonAdapter<Boolean> = moshi.adapter(Boolean::class.java, emptySet(),
      "success")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "messageId")

  public override fun toString(): String = buildString(37) {
      append("GeneratedJsonAdapter(").append("BulkEmailResult").append(')') }

  public override fun fromJson(reader: JsonReader): BulkEmailResult {
    var email: String? = null
    var success: Boolean? = null
    var messageId: String? = null
    var error: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> email = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("email", "email",
            reader)
        1 -> success = booleanAdapter.fromJson(reader) ?: throw Util.unexpectedNull("success",
            "success", reader)
        2 -> messageId = nullableStringAdapter.fromJson(reader)
        3 -> error = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return BulkEmailResult(
        email = email ?: throw Util.missingProperty("email", "email", reader),
        success = success ?: throw Util.missingProperty("success", "success", reader),
        messageId = messageId,
        error = error
    )
  }

  public override fun toJson(writer: JsonWriter, value_: BulkEmailResult?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("email")
    stringAdapter.toJson(writer, value_.email)
    writer.name("success")
    booleanAdapter.toJson(writer, value_.success)
    writer.name("message_id")
    nullableStringAdapter.toJson(writer, value_.messageId)
    writer.name("error")
    nullableStringAdapter.toJson(writer, value_.error)
    writer.endObject()
  }
}
